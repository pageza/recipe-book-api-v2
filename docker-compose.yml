# docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recipe_db
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recipe_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.migrate
    command: ["go", "run", "cmd/migrate/main.go"]
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=recipe_db
      - JWT_SECRET=your_jwt_secret
    networks:
      - backend
    depends_on:
      - postgres
    restart: "no"

  api:
    build: .
    entrypoint: []
    command: ["go", "run", "cmd/api-gateway/main.go"]
    networks:
      - backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=recipe_db
      - JWT_SECRET=your_jwt_secret
    depends_on:
      - postgres
      - migrate

  grpc-server:
     build: .
     command: ["go", "run", "cmd/grpc-server/main.go"]
     networks:
       - backend
     ports:
       - "50051:50051"
     environment:
       - DB_HOST=postgres
       - DB_PORT=5432
       - DB_USER=postgres
       - DB_PASSWORD=postgres
       - DB_NAME=recipe_db
       - JWT_SECRET=your_jwt_secret
     depends_on:
       - postgres
       - migrate
     healthcheck:
       test: ["CMD-SHELL", "nc -z localhost 50051 || exit 1"]
       interval: 10s
       timeout: 5s
       retries: 5

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      - postgres
      - grpc-server
    networks:
      - backend
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=recipe_db
      - JWT_SECRET=your_jwt_secret
      - GRPC_SERVER_ADDRESS=grpc-server:50051
      - GRPC_SERVER_HOST=grpc-server:50051
      - GRPC_DIAL_ADDRESS=grpc-server:50051
    command: ["/bin/sh", "-c", "until nc -z grpc-server 50051; do echo waiting for grpc-server; sleep 2; done; go test ./... -v"]

volumes:
  pgdata:

networks:
  backend:
    external: true
