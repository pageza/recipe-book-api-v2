# docker-compose.yml
services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: recipe_db
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recipe_db"]
      interval: 5s
      timeout: 5s
      retries: 10


  api:
    build: .
    entrypoint: []
    command: ["go", "run", "cmd/api-gateway/main.go"]
    networks:
      - backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_HOST=postgres  # In production/local, this resolves to the Compose postgres service.
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=recipe_db
      - JWT_SECRET=your_jwt_secret
    depends_on:
      postgres:
        condition: service_healthy

  grpc-server:
    build: .
    command: ["go", "run", "cmd/grpc-server/main.go"]
    networks:
      - backend
    ports:
      - "50051:50051"
      - "50052:50052"
      - "50053:50053"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=recipe_db
      - JWT_SECRET=your_jwt_secret
    depends_on:
      postgres:
        condition: service_healthy

networks:
  backend:
    external: true

volumes:
  pgdata:
