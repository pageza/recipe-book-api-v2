syntax = "proto3";

package recipe;

option go_package = "github.com/pageza/recipe-book-api-v2/proto/proto/recipe;recipe";

// RecipeService defines the gRPC service for recipe operations.
service RecipeService {
  // GetRecipe fetches a recipe by its unique ID.
  rpc GetRecipe (GetRecipeRequest) returns (GetRecipeResponse);
  // QueryRecipe is a unified endpoint for:
  //   - Listing recipes (if the "query" field is empty) filtered by user_id and/or filter.
  //   - Advanced searches when the "query" field is non-empty (e.g., by cuisine, diet, ingredients).
  rpc QueryRecipe (RecipeQueryRequest) returns (RecipeQueryResponse);
}

// GetRecipeRequest is used to request a specific recipe.
message GetRecipeRequest {
  string recipe_id = 1;
}

// GetRecipeResponse returns the full details of a recipe.
message GetRecipeResponse {
  string recipe_id = 1;
  string title = 2;
  string ingredients = 3;
  string steps = 4;
  string nutritional_info = 5;
  string allergy_disclaimer = 6;
  string appliances = 7;
  int64 created_at = 8;  
  int64 updated_at = 9;
}

// RecipeQueryRequest is used for both advanced search and list operations.
// An empty "query" field indicates a listing operation, while a non-empty field
// triggers advanced search logic (e.g., filtering by cuisine, diet, etc.).
message RecipeQueryRequest {
  string query = 1;      // Advanced search text (e.g., "vegan"); empty for simple listings.
  string user_id = 2;    // Optional: Filter recipes by creator's user ID.
  string filter = 3;     // Optional: Additional filtering criteria (e.g., "Indian").
  int32 page = 4;        // Optional: Requested page number for pagination.
  int32 limit = 5;       // Optional: Number of recipes per page.
}

// RecipeQueryResponse returns the results for a query along with pagination details.
message RecipeQueryResponse {
  repeated GetRecipeResponse recipes = 1;  // List of recipes matching the query.
  int32 page = 2;                          // Echoed page number.
  int32 limit = 3;                         // Echoed limit per page.
  int32 total = 4;                         // Total number of matching recipes.
}
