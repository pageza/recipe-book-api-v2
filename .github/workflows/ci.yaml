name: CI Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'  # adjust as needed

      - name: Run Go tests
        run: go test -v ./...

      - name: Build Docker images
        run: docker compose build --no-cache

      - name: Start Docker Compose Services
        run: docker compose up -d

      - name: List Docker Compose Services
        run: docker compose ps

      - name: Wait for API to be Ready
        run: |
          URL="http://localhost:8080/healthcheck"
          echo "Checking API health at: $URL"
          # Optional: initial sleep to give the API some time to start
          sleep 15
          for i in {1..15}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "Attempt $i: HTTP status $status"
            if [ "$status" -eq 200 ]; then
              echo "API is ready"
              exit 0
            fi
            sleep 5
          done
          echo "API did not become healthy in time"
          exit 1


      - name: Dump container logs 
        if: always()
        run: docker compose logs 

      # - name: Upload Docker logs as artifact
      #   if: always()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: docker-compose-logs
      #     path: docker-logs.txt

      - name: Run all modular E2E tests with Newman
        run: |
          for file in $(find collections/user_endpoints -name "*.postman_collection.json"); do
            echo "Running tests in $file"
            docker run --rm --network recipe-book-api-v2_default -v $(pwd):/etc/newman postman/newman run "$file" --environment collections/TestEnvironment.postman_environment.json
          done


      - name: Tear Down Docker Compose Services
        if: always()
        run: docker compose down
